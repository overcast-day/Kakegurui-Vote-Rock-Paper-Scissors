package rock.paper.scissors.project;


import javax.swing.JOptionPane; 
/**
 *
 * @author dianaliang
 */
public class rockpaperscissors extends javax.swing.JFrame {

    //username
    String usera = "User A";
    String userb = "User B";
    //the number of cards chosen 
    int rocks = 0;
    int scissors = 0;
    int paper = 0;
    int pool = rocks+scissors+paper;
    int rocksb = 0;
    int scissorsb = 0;
    int paperb = 0;
    int poolb = rocksb+scissorsb+paperb;
    int totalrocks = rocks+rocksb;
    int totalscissors = scissors+scissorsb;
    int totalpaper = paper+paperb;
    int totalpool = pool+poolb;
    //points and bets
    int pointsa = 100;
    int pointsb = 100;
    int beta = 0;
    int betb = 0;
    int bet = 0;
    //card dealing
    int option1a = 0;
    int option1b= 0;
    int option2a= 0;
    int option2b= 0;
    int deala = 0;
    int dealb = 0;
   
    //rock paper scissors hand
    int cardra=0;
    int cardpa=0;
    int cardsa=0;
    int cardsb=0;
    int cardpb=0;
    int cardrb=0;
    int cardpool=0;
    
    //actual rock paper scissor stuff
    int choicea = 0;
    int choiceb = 0;
    int r = 1;
    int p = 2;
    int s = 3;
    int outcome = 0;
    int p1 = 1;
    int p2 = 2;
    int tie = 3;
    
    /**
     * Creates new form rockpaperscissors
     */
    public rockpaperscissors() {
        initComponents();
        
        buttonContinue.setEnabled(false);
       //buttonPool stuff
        buttonAddar.setEnabled(false);  
        buttonAddap.setEnabled(false);
        buttonAddas.setEnabled(false);
        buttonMinusap.setEnabled(false);
        buttonMinusar.setEnabled(false);
        buttonMinusas.setEnabled(false);
        buttonPoola.setEnabled(false);
        buttonAddbr.setEnabled(false);  
        buttonAddbp.setEnabled(false);
        buttonAddbs.setEnabled(false);
        buttonMinusbp.setEnabled(false);
        buttonMinusbr.setEnabled(false);
        buttonMinusbs.setEnabled(false);
        buttonPoolb.setEnabled(false);
        //buttonPlaystuff + cards display
        buttonPlay.setEnabled(false);
        //A
        cardRock1A.setEnabled(false);
        cardRock2A.setEnabled(false);
        cardRock3A.setEnabled(false);
        cardPaper1A.setEnabled(false);
        cardPaper2A.setEnabled(false);
        cardPaper3A.setEnabled(false); 
        cardScissors1A.setEnabled(false);
        cardScissors2A.setEnabled(false);
        cardScissors3A.setEnabled(false);
        //B
        cardRock1B.setEnabled(false);
        cardRock2B.setEnabled(false);
        cardRock3B.setEnabled(false);
        cardPaper1B.setEnabled(false);
        cardPaper2B.setEnabled(false);
        cardPaper3B.setEnabled(false); 
        cardScissors1B.setEnabled(false);
        cardScissors2B.setEnabled(false);
        cardScissors3B.setEnabled(false);
        //RPS
        buttonGo.setEnabled(false);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardRock1A = new javax.swing.JButton();
        cardRock2A = new javax.swing.JButton();
        textOutcome = new javax.swing.JTextField();
        textRock = new javax.swing.JTextField();
        textPaper = new javax.swing.JTextField();
        textScissors = new javax.swing.JTextField();
        buttonPoola = new javax.swing.JButton();
        buttonAddap = new javax.swing.JButton();
        buttonMinusar = new javax.swing.JButton();
        buttonAddas = new javax.swing.JButton();
        buttonAddar = new javax.swing.JButton();
        buttonMinusap = new javax.swing.JButton();
        buttonMinusas = new javax.swing.JButton();
        cardRock3A = new javax.swing.JButton();
        cardPaper1A = new javax.swing.JButton();
        cardPaper2A = new javax.swing.JButton();
        cardPaper3A = new javax.swing.JButton();
        cardScissors1A = new javax.swing.JButton();
        cardScissors2A = new javax.swing.JButton();
        cardScissors3A = new javax.swing.JButton();
        buttonStart = new javax.swing.JButton();
        labelUsera = new javax.swing.JLabel();
        labelPointsa = new javax.swing.JLabel();
        buttonContinue = new javax.swing.JButton();
        buttonPlay = new javax.swing.JButton();
        labelUserb = new javax.swing.JLabel();
        labelPointsb = new javax.swing.JLabel();
        cardRock2B = new javax.swing.JButton();
        cardRock1B = new javax.swing.JButton();
        cardRock3B = new javax.swing.JButton();
        cardScissors1B = new javax.swing.JButton();
        cardScissors2B = new javax.swing.JButton();
        cardScissors3B = new javax.swing.JButton();
        cardPaper1B = new javax.swing.JButton();
        cardPaper2B = new javax.swing.JButton();
        cardPaper3B = new javax.swing.JButton();
        buttonMinusbp = new javax.swing.JButton();
        buttonAddbs = new javax.swing.JButton();
        buttonAddbr = new javax.swing.JButton();
        buttonMinusbs = new javax.swing.JButton();
        buttonMinusbr = new javax.swing.JButton();
        textRockb = new javax.swing.JTextField();
        textPaperb = new javax.swing.JTextField();
        textScissorsb = new javax.swing.JTextField();
        buttonAddbp = new javax.swing.JButton();
        buttonPoolb = new javax.swing.JButton();
        buttonGo = new javax.swing.JButton();
        textOutcomeb = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cardRock1A.setText("Rock");
        cardRock1A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardRock1AActionPerformed(evt);
            }
        });

        cardRock2A.setText("Rock");
        cardRock2A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardRock2AActionPerformed(evt);
            }
        });

        textRock.setText("Rock");

        textPaper.setText("Paper");

        textScissors.setText("scissors");

        buttonPoola.setText("OK");
        buttonPoola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPoolaActionPerformed(evt);
            }
        });

        buttonAddap.setText("+");
        buttonAddap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddapActionPerformed(evt);
            }
        });

        buttonMinusar.setText("-");
        buttonMinusar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinusarActionPerformed(evt);
            }
        });

        buttonAddas.setText("+");
        buttonAddas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddasActionPerformed(evt);
            }
        });

        buttonAddar.setText("+");
        buttonAddar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddarActionPerformed(evt);
            }
        });

        buttonMinusap.setText("-");
        buttonMinusap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinusapActionPerformed(evt);
            }
        });

        buttonMinusas.setText("-");
        buttonMinusas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinusasActionPerformed(evt);
            }
        });

        cardRock3A.setText("Rock");
        cardRock3A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardRock3AActionPerformed(evt);
            }
        });

        cardPaper1A.setText("Paper");
        cardPaper1A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardPaper1AActionPerformed(evt);
            }
        });

        cardPaper2A.setText("Paper");
        cardPaper2A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardPaper2AActionPerformed(evt);
            }
        });

        cardPaper3A.setText("Paper");
        cardPaper3A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardPaper3AActionPerformed(evt);
            }
        });

        cardScissors1A.setText("Scissors");
        cardScissors1A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardScissors1AActionPerformed(evt);
            }
        });

        cardScissors2A.setText("Scissors");
        cardScissors2A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardScissors2AActionPerformed(evt);
            }
        });

        cardScissors3A.setText("Scissors");
        cardScissors3A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardScissors3AActionPerformed(evt);
            }
        });

        buttonStart.setText("Start!");
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });

        labelUsera.setText("Player 1");

        labelPointsa.setText("Points");

        buttonContinue.setText("Continue");
        buttonContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonContinueActionPerformed(evt);
            }
        });

        buttonPlay.setText("Play!");
        buttonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlayActionPerformed(evt);
            }
        });

        labelUserb.setText("Player 2");

        labelPointsb.setText("Points");

        cardRock2B.setText("Rock");
        cardRock2B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardRock2BActionPerformed(evt);
            }
        });

        cardRock1B.setText("Rock");
        cardRock1B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardRock1BActionPerformed(evt);
            }
        });

        cardRock3B.setText("Rock");
        cardRock3B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardRock3BActionPerformed(evt);
            }
        });

        cardScissors1B.setText("Scissors");
        cardScissors1B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardScissors1BActionPerformed(evt);
            }
        });

        cardScissors2B.setText("Scissors");
        cardScissors2B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardScissors2BActionPerformed(evt);
            }
        });

        cardScissors3B.setText("Scissors");
        cardScissors3B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardScissors3BActionPerformed(evt);
            }
        });

        cardPaper1B.setText("Paper");
        cardPaper1B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardPaper1BActionPerformed(evt);
            }
        });

        cardPaper2B.setText("Paper");
        cardPaper2B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardPaper2BActionPerformed(evt);
            }
        });

        cardPaper3B.setText("Paper");
        cardPaper3B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardPaper3BActionPerformed(evt);
            }
        });

        buttonMinusbp.setText("-");
        buttonMinusbp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinusbpActionPerformed(evt);
            }
        });

        buttonAddbs.setText("+");
        buttonAddbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddbsActionPerformed(evt);
            }
        });

        buttonAddbr.setText("+");
        buttonAddbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddbrActionPerformed(evt);
            }
        });

        buttonMinusbs.setText("-");
        buttonMinusbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinusbsActionPerformed(evt);
            }
        });

        buttonMinusbr.setText("-");
        buttonMinusbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMinusbrActionPerformed(evt);
            }
        });

        textRockb.setText("Rock");

        textPaperb.setText("Paper");

        textScissorsb.setText("scissors");

        buttonAddbp.setText("+");
        buttonAddbp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddbpActionPerformed(evt);
            }
        });

        buttonPoolb.setText("OK");
        buttonPoolb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPoolbActionPerformed(evt);
            }
        });

        buttonGo.setText("Rock,Paper Scissors!");
        buttonGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonMinusar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonMinusap, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonMinusas, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardRock1A, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cardPaper2A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cardScissors2A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cardRock2A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cardPaper3A, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cardScissors3A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cardRock3A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textScissors, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textRock, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonAddar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonAddap, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonAddas, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonMinusbr, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonMinusbp, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonMinusbs, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(textRockb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textPaperb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(buttonAddbp, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(buttonAddbr, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(textScissorsb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(buttonAddbs, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textOutcomeb, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(cardPaper1B, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                                .addComponent(cardRock1B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(29, 29, 29)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(cardPaper2B, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                                .addComponent(cardRock2B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(cardScissors1B)
                                            .addGap(29, 29, 29)
                                            .addComponent(cardScissors2B)))
                                    .addGap(36, 36, 36)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cardScissors3B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cardPaper3B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cardRock3B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(73, 73, 73))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cardPaper1A, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cardScissors1A, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(labelPointsa, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelUsera, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelUserb, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(buttonPoola, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(379, 379, 379)
                                .addComponent(buttonPoolb))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(textOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(344, 344, 344)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonContinue)
                            .addComponent(buttonPlay)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(buttonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelPointsb, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(buttonGo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsera)
                    .addComponent(labelUserb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonContinue)
                    .addComponent(labelPointsa)
                    .addComponent(labelPointsb))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOutcomeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cardRock1A, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardRock3A, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardRock2A, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardRock2B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardRock3B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardRock1B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cardPaper1A, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                .addComponent(cardPaper2A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cardPaper3A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(cardPaper3B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cardPaper1B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cardPaper2B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cardScissors1A, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                        .addComponent(cardScissors2A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cardScissors3A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cardScissors1B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cardScissors2B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cardScissors3B, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textRock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonMinusar)
                    .addComponent(buttonAddar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textRockb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddbr, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonMinusbr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddap, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonMinusap)
                    .addComponent(buttonAddbp, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonMinusbp)
                    .addComponent(textPaperb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textScissors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonMinusas)
                    .addComponent(buttonAddbs, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonMinusbs)
                    .addComponent(textScissorsb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonPoola)
                    .addComponent(buttonPoolb))
                .addGap(41, 41, 41)
                .addComponent(buttonPlay)
                .addGap(18, 18, 18)
                .addComponent(buttonGo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cardRock2AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardRock2AActionPerformed
        choicea = r;
        cardra = cardra-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Rock.");
    }//GEN-LAST:event_cardRock2AActionPerformed
    public void TurnAllButtonsOff() {
        buttonContinue.setEnabled(false);
       //buttonPool stuff
        buttonAddar.setEnabled(false);  
        buttonAddap.setEnabled(false);
        buttonAddas.setEnabled(false);
        buttonMinusap.setEnabled(false);
        buttonMinusar.setEnabled(false);
        buttonMinusas.setEnabled(false);
        buttonPoola.setEnabled(false);
        buttonAddbr.setEnabled(false);  
        buttonAddbp.setEnabled(false);
        buttonAddbs.setEnabled(false);
        buttonMinusbp.setEnabled(false);
        buttonMinusbr.setEnabled(false);
        buttonMinusbs.setEnabled(false);
        buttonPoolb.setEnabled(false);
        //buttonPlaystuff + cards display
        buttonPlay.setEnabled(false);
        //A
        cardRock1A.setEnabled(false);
        cardRock2A.setEnabled(false);
        cardRock3A.setEnabled(false);
        cardPaper1A.setEnabled(false);
        cardPaper2A.setEnabled(false);
        cardPaper3A.setEnabled(false); 
        cardScissors1A.setEnabled(false);
        cardScissors2A.setEnabled(false);
        cardScissors3A.setEnabled(false);
        //B
        cardRock1B.setEnabled(false);
        cardRock2B.setEnabled(false);
        cardRock3B.setEnabled(false);
        cardPaper1B.setEnabled(false);
        cardPaper2B.setEnabled(false);
        cardPaper3B.setEnabled(false); 
        cardScissors1B.setEnabled(false);
        cardScissors2B.setEnabled(false);
        cardScissors3B.setEnabled(false);
        //RPS
        buttonGo.setEnabled(false);
      
    }
    
    public void resetVariables(){
    rocks = 0;
    scissors = 0;
    paper = 0;
    pool = rocks+scissors+paper;
    rocksb = 0;
    scissorsb = 0;
    paperb = 0;
    poolb = rocksb+scissorsb+paperb;
    totalrocks = rocks+rocksb;
    totalscissors = scissors+scissorsb;
    totalpaper = paper+paperb;
    totalpool = pool+poolb;
    //points and bets
    beta = 0;
    betb = 0;
    bet = 0;
    //card dealing
    option1a = 0;
    option1b= 0;
    option2a= 0;
    option2b= 0;
    deala = 0;
    dealb = 0;
   
    //rock paper scissors hand
    cardra=0;
    cardpa=0;
    cardsa=0;
    cardsb=0;
    cardpb=0;
    cardrb=0;
    
    //actual rock paper scissor stuff
    choicea = 0;
    choiceb = 0;
    r = 1;
    p = 2;
    s = 3;
    outcome = 0;
    p1 = 1;
    p2 = 2;
    tie = 3;
    //Other
    textOutcomeb.setText("");
    textOutcome.setText("");
    textRock.setText("Rock");
    textPaper.setText("Paper");
    textScissors.setText("Scissors");
    textRockb.setText("Rock");
    textPaperb.setText("Paper");
    textScissorsb.setText("Scissors");
    
    }
    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartActionPerformed
     //logistical stuff 
        resetVariables();
        TurnAllButtonsOff();
        
        buttonStart.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Hello! Welcome to Kakegurui-Style Rock, Paper, Scissors!", "", JOptionPane.INFORMATION_MESSAGE);
        usera = UserInput.getString("Enter Username, Player A");
        labelUsera.setText("Player: "+usera);
        pointsa = 100;
        labelPointsa.setText("Points: "+ pointsa);

        userb = UserInput.getString("Enter Username, Player B");
        labelUserb.setText("Player: "+userb);
        pointsb = 100;
        labelPointsb.setText("Points: "+ pointsb);
        
        buttonContinue.setEnabled(true);
        buttonStart.setText("Restart");

    }//GEN-LAST:event_buttonStartActionPerformed

    private void buttonContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonContinueActionPerformed
        buttonContinue.setVisible(false);
        resetVariables();
        //bet stuff
        do {
             bet = UserInput.getInteger("How much would you like to bet? Players please discuss.");
        } while (bet==0);
        
        JOptionPane.showMessageDialog(null, "Please select how many rocks, papers or scissors you would like to enter into the pool.", "", JOptionPane.INFORMATION_MESSAGE);
        buttonPoola.setEnabled(true);
        buttonPoolStuff();
    
    }//GEN-LAST:event_buttonContinueActionPerformed

    private void buttonAddarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddarActionPerformed
        rocks = rocks+1;
        textRock.setText("Rock; "+rocks);
        buttonMinusar.setEnabled(true);
        buttonPoolStuff();
    
    }//GEN-LAST:event_buttonAddarActionPerformed

    public void buttonPoolStuff() {
        pool = rocks+scissors+paper;
        if(pool>=20){
            buttonAddar.setEnabled(false);  
            buttonAddap.setEnabled(false);
            buttonAddas.setEnabled(false);
        }
        else{
           buttonAddar.setEnabled(true);  
           buttonAddap.setEnabled(true);
           buttonAddas.setEnabled(true);  
        }
    }
    
    public void buttonPoolStuffB() {  
        poolb = rocksb+scissorsb+paperb;
        if(poolb>=20){
            buttonAddbr.setEnabled(false);  
            buttonAddbp.setEnabled(false);
            buttonAddbs.setEnabled(false);
        }
        else{
           buttonAddbr.setEnabled(true);  
           buttonAddbp.setEnabled(true);
           buttonAddbs.setEnabled(true);  
        }
    }
    
    private void buttonAddapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddapActionPerformed
        paper = paper+1;
        textPaper.setText("Paper: "+paper);
        buttonMinusap.setEnabled(true);
        buttonPoolStuff();

    }//GEN-LAST:event_buttonAddapActionPerformed

    private void buttonAddasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddasActionPerformed
        scissors = scissors +1;
        textScissors.setText("Scissors: "+scissors);
        buttonMinusas.setEnabled(true);
        buttonPoolStuff();
    }//GEN-LAST:event_buttonAddasActionPerformed

    private void buttonMinusarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinusarActionPerformed
        rocks = rocks-1;
        textRock.setText("Rocks: "+rocks);
        if(rocks<1){
            buttonMinusar.setEnabled(false);    
        }
        buttonPoolStuff();
    }//GEN-LAST:event_buttonMinusarActionPerformed

    private void buttonMinusapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinusapActionPerformed
        paper = paper-1;
        textPaper.setText("Paper: "+paper);
        if(paper<1){
            buttonMinusap.setEnabled(false);    
        }
        buttonPoolStuff();
    }//GEN-LAST:event_buttonMinusapActionPerformed

    private void buttonMinusasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinusasActionPerformed
        scissors = scissors-1;
        textScissors.setText("Scissor: "+scissors);
        if(scissors<1){
             buttonMinusas.setEnabled(false);    
        }
        buttonPoolStuff();
    }//GEN-LAST:event_buttonMinusasActionPerformed

    private void buttonPoolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPoolaActionPerformed
        if(pool==20){
        int response = JOptionPane.showConfirmDialog(null, "Are you sure?", "title", JOptionPane.YES_NO_OPTION);
           if (response == JOptionPane.YES_OPTION){
                        //they said yes, so do it!
           }
           else if (response == JOptionPane.NO_OPTION) {
                        //they said no, get out of here!
                        return;
           }
         buttonAddar.setEnabled(false);  
         buttonAddap.setEnabled(false);
         buttonAddas.setEnabled(false);
         buttonMinusap.setEnabled(false);
         buttonMinusar.setEnabled(false);
         buttonMinusas.setEnabled(false);
         buttonPoola.setEnabled(false);
           
    //player 2 options open enable(true)
        buttonPoolStuffB();
        buttonPoolb.setEnabled(true);
        
        } 
        else{
            JOptionPane.showMessageDialog(null, "It doesn't add up to 20!", "Try Again!", JOptionPane.INFORMATION_MESSAGE); 
        }
    
    }//GEN-LAST:event_buttonPoolaActionPerformed
    public void cardDeal() {
        cardDealA();
        cardDealB();

        totalpool = totalscissors+totalpaper+totalrocks;
    }
    public void cardDealA(){
        if (deala!=0){
            if(deala<=totalrocks){
                cardra = cardra+1;
                totalrocks= totalrocks-1;
                deala = 0;
            }
            else if (deala<=totalpaper+totalrocks){
                cardpa = cardpa+1;
                totalpaper= totalpaper-1;
                deala = 0;  
            }
            else{
                cardsa = cardsa+1;
                totalscissors = totalscissors -1;
                deala = 0;
            }
        }
    }
    public void cardDealB(){
        if (dealb!=0){
            if(dealb<=totalrocks){
                cardrb = cardrb+1;
                totalrocks= totalrocks-1;
                dealb = 0;
            }
            else if (dealb<=totalrocks+totalpaper){
                cardpb = cardpb+1;
                totalpaper= totalpaper-1;
                dealb = 0;  
            }
            else{
                cardsb = cardsb+1;
                totalscissors = totalscissors -1;
                dealb = 0;
            }
        } 
    }
    private void buttonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlayActionPerformed
        totalrocks = rocks+rocksb;
        totalscissors = scissors+scissorsb;
        totalpaper = paper+paperb;
    //figuring out the cards selected
        deala = (int)(Math.random()*totalpool)+1;
        cardDeal();
        dealb = (int)(Math.random()*totalpool)+1; 
        cardDeal();
        deala = (int)(Math.random()*totalpool)+1;
        cardDeal();
        dealb = (int)(Math.random()*totalpool)+1;
        cardDeal();
        deala= (int)(Math.random()*totalpool)+1;
        cardDeal();
        dealb = (int)(Math.random()*totalpool)+1;
        cardDeal();

        //display time!
        handDisplay();
        buttonPlay.setEnabled(false);
    }//GEN-LAST:event_buttonPlayActionPerformed

    private void buttonMinusbpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinusbpActionPerformed
        paperb = paperb-1;
        textPaperb.setText("Paper: "+paperb);
        if(paperb<1){
            buttonMinusbp.setEnabled(false);    
        }
        buttonPoolStuffB();
    }//GEN-LAST:event_buttonMinusbpActionPerformed

    private void buttonAddbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddbsActionPerformed
        scissorsb = scissorsb +1;
        textScissorsb.setText("Scissors: "+scissorsb);
        buttonMinusbs.setEnabled(true);
        buttonPoolStuffB();
    }//GEN-LAST:event_buttonAddbsActionPerformed

    private void buttonAddbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddbrActionPerformed
        rocksb = rocksb+1;
        textRockb.setText("Rock; "+rocksb);
        buttonMinusbr.setEnabled(true);
        buttonPoolStuffB();
    }//GEN-LAST:event_buttonAddbrActionPerformed

    private void buttonMinusbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinusbsActionPerformed
        scissorsb = scissorsb-1;
        textScissorsb.setText("Scissor: "+scissorsb);
        if(scissorsb<1){
             buttonMinusbs.setEnabled(false);    
        }
        buttonPoolStuffB();
    }//GEN-LAST:event_buttonMinusbsActionPerformed

    private void buttonMinusbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMinusbrActionPerformed
        rocksb = rocksb-1;
        textRockb.setText("Rocks: "+rocksb);
        if(rocksb<1){
            buttonMinusbr.setEnabled(false);    
        }
        buttonPoolStuffB();
    }//GEN-LAST:event_buttonMinusbrActionPerformed

    private void buttonAddbpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddbpActionPerformed
        paperb = paperb+1;
        textPaperb.setText("Paper: "+paperb);
        buttonMinusbp.setEnabled(true);
        buttonPoolStuffB();
    }//GEN-LAST:event_buttonAddbpActionPerformed

    private void buttonPoolbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPoolbActionPerformed
        if(poolb==20){
            int response = JOptionPane.showConfirmDialog(null, "Are you sure?", "title", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION){
                        //they said yes, so do it!
           }
            else if (response == JOptionPane.NO_OPTION) {
                        //they said no, get out of here!
                        return;
           }
            buttonAddbr.setEnabled(false);  
            buttonAddbp.setEnabled(false);
            buttonAddbs.setEnabled(false);
            buttonMinusbp.setEnabled(false);
            buttonMinusbr.setEnabled(false);
            buttonMinusbs.setEnabled(false);
            buttonPoolb.setEnabled(false);
           
            buttonPlay.setEnabled(true);
        } 
        else{
            JOptionPane.showMessageDialog(null, "It doesn't add up to 20!", "Try Again!", JOptionPane.INFORMATION_MESSAGE); 
        }
    }//GEN-LAST:event_buttonPoolbActionPerformed

    private void cardRock1AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardRock1AActionPerformed
        choicea = r;
        cardra = cardra-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Rock.");
    }//GEN-LAST:event_cardRock1AActionPerformed

    private void cardRock3AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardRock3AActionPerformed
        choicea = r;
        cardra = cardra-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Rock.");
    }//GEN-LAST:event_cardRock3AActionPerformed

    private void cardPaper1AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardPaper1AActionPerformed
        choicea = p;
        cardpa = cardpa-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Paper.");
    }//GEN-LAST:event_cardPaper1AActionPerformed

    private void cardPaper2AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardPaper2AActionPerformed
        choicea = p;
        cardpa = cardpa-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Paper.");
    }//GEN-LAST:event_cardPaper2AActionPerformed

    private void cardPaper3AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardPaper3AActionPerformed
        choicea = p;
        cardpa = cardpa-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Paper.");
    }//GEN-LAST:event_cardPaper3AActionPerformed

    private void cardScissors1AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardScissors1AActionPerformed
        choicea = s;
        cardsa = cardsa-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Scissors.");
    }//GEN-LAST:event_cardScissors1AActionPerformed

    private void cardScissors2AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardScissors2AActionPerformed
        choicea = s;
        cardsa = cardsa-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Scissors.");
    }//GEN-LAST:event_cardScissors2AActionPerformed

    private void cardScissors3AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardScissors3AActionPerformed
        choicea = s;
        cardsa = cardsa-1;
        buttonGo.setEnabled(true);
        HandAOff();
        textOutcome.setText("You chose Scissors.");
    }//GEN-LAST:event_cardScissors3AActionPerformed

    private void cardRock1BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardRock1BActionPerformed
        choiceb = r;
        cardrb = cardrb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Rock.");
    }//GEN-LAST:event_cardRock1BActionPerformed

    private void cardRock2BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardRock2BActionPerformed
        choiceb = r;
        cardrb = cardrb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Rock.");
    }//GEN-LAST:event_cardRock2BActionPerformed

    private void cardRock3BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardRock3BActionPerformed
        choiceb = r;
        cardrb = cardrb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Rock.");
    }//GEN-LAST:event_cardRock3BActionPerformed

    private void cardPaper1BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardPaper1BActionPerformed
        choiceb = p;
        cardpb = cardpb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Paper.");
    }//GEN-LAST:event_cardPaper1BActionPerformed

    private void cardPaper2BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardPaper2BActionPerformed
        choiceb = p;
        cardpb = cardpb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Paper.");
    }//GEN-LAST:event_cardPaper2BActionPerformed

    private void cardPaper3BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardPaper3BActionPerformed
        choiceb = p;
        cardpb = cardpb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcome.setText("You chose Paper.");
    }//GEN-LAST:event_cardPaper3BActionPerformed

    private void cardScissors1BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardScissors1BActionPerformed
        choiceb = s;
        cardsb = cardsb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Scissors.");
    }//GEN-LAST:event_cardScissors1BActionPerformed

    private void cardScissors2BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardScissors2BActionPerformed
        choiceb = s;
        cardsb = cardsb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Scissors.");
    }//GEN-LAST:event_cardScissors2BActionPerformed

    private void cardScissors3BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardScissors3BActionPerformed
        choiceb = s;
        cardsb = cardsb-1;
        buttonGo.setEnabled(true);
        HandBOff();
        textOutcomeb.setText("You chose Scissors.");
    }//GEN-LAST:event_cardScissors3BActionPerformed

    private void buttonGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGoActionPerformed
        buttonGo.setEnabled(false);
        if ((choicea==r)&&(choiceb==p)){
            
            outcome = p2;
        }
        else if ((choicea==r)&&(choiceb==s)){

            outcome=p1;
        }
        else if ((choicea==p)&&(choiceb==r)){
            
            outcome=p1;
        }
        else if ((choicea==p)&&(choiceb==s)){
            
            outcome=p2;
        }
        else if ((choicea==s)&&(choiceb==r)){
            
            outcome=p2;
        }
        else if ((choicea==s)&&(choiceb==p)){
            
            outcome=p1;
        }
        else{
            outcome=tie;
        }
        
        RPSstuff();
        EndGame();
        
    }//GEN-LAST:event_buttonGoActionPerformed
    
    public void handDisplayRock(){
     //Rock A
        if(cardra==3){
            cardRock1A.setEnabled(true);
            cardRock2A.setEnabled(true);
            cardRock3A.setEnabled(true); 
        } 
        else if(cardra==2){
            cardRock1A.setEnabled(true);
            cardRock2A.setEnabled(true);   
        }
        else if (cardra==1){
           cardRock1A.setEnabled(true); 
        } 
    }
    
    public void handDisplayRockB(){
     //Rock A
        if(cardrb==3){
            cardRock1B.setEnabled(true);
            cardRock2B.setEnabled(true);
            cardRock3B.setEnabled(true); 
        } 
        else if(cardrb==2){
            cardRock1B.setEnabled(true);
            cardRock2B.setEnabled(true);   
        }
        else if (cardrb==1){
           cardRock1B.setEnabled(true); 
        } 
    }
    public void handDisplayPaper(){
        
     //Paper A
        if(cardpa==3){
            cardPaper1A.setEnabled(true);
            cardPaper2A.setEnabled(true);
            cardPaper3A.setEnabled(true); 
        } 
        else if(cardpa==2){
            cardPaper1A.setEnabled(true);
            cardPaper2A.setEnabled(true);   
        }
        else if (cardpa==1){
           cardPaper1A.setEnabled(true); 
        }    
    }
    
     public void handDisplayPaperB(){
        
     //Paper A
        if(cardpb==3){
            cardPaper1B.setEnabled(true);
            cardPaper2B.setEnabled(true);
            cardPaper3B.setEnabled(true); 
        } 
        else if(cardpb==2){
            cardPaper1B.setEnabled(true);
            cardPaper2B.setEnabled(true);   
        }
        else if (cardpb==1){
           cardPaper1B.setEnabled(true); 
        }
        
    }
   
    public void handDisplayScissors(){
       //Scissors A
        if(cardsa==3){
            cardScissors1A.setEnabled(true);
            cardScissors2A.setEnabled(true);
            cardScissors3A.setEnabled(true); 
        } 
        else if(cardsa==2){
            cardScissors1A.setEnabled(true);
            cardScissors2A.setEnabled(true);   
        }
        else if (cardsa==1){
           cardScissors1A.setEnabled(true);    
        }
    }
    
    public void handDisplayScissorsB(){
       //Scissors A
        if(cardsb==3){
            cardScissors1B.setEnabled(true);
            cardScissors2B.setEnabled(true);
            cardScissors3B.setEnabled(true); 
        } 
        else if(cardsb==2){
            cardScissors1B.setEnabled(true);
            cardScissors2B.setEnabled(true);   
        }
        else if (cardsb==1){
            cardScissors1B.setEnabled(true);    
        }
    }
        
    public void handDisplay() { 
        handDisplayRock();
        handDisplayRockB();
        handDisplayPaper();
        handDisplayPaperB();
        handDisplayScissors();
        handDisplayScissorsB();
    }
    
    //actual game stuff
    public void RPSstuff(){
        //outcomes
        if (outcome==p1){
           pointsa = pointsa+bet;
           pointsb = pointsb-bet;
           labelPointsa.setText(""+pointsa);
           labelPointsb.setText(""+pointsb);
           TurnAllButtonsOff(); 
           buttonContinue.setEnabled(true);
           buttonContinue.setVisible(true);
           //Extra stuff
           textOutcome.setText("You WIN!");
           textOutcomeb.setText("You LOST");
        }   
        else if (outcome==p2){
           pointsa = pointsa-bet;
           pointsb = pointsb+bet;
           labelPointsa.setText(""+pointsa);
           labelPointsb.setText(""+pointsb);
           TurnAllButtonsOff(); 
           buttonContinue.setEnabled(true);  
           buttonContinue.setVisible(true);
           //Extra stuff
           textOutcome.setText("You LOST!");
           textOutcomeb.setText("You WIN!");
        }
        else {
            cardpool=cardra+cardpa+cardsa+cardsb+cardpb+cardrb;
            if (cardpool>=0){
                JOptionPane.showMessageDialog(null, "A TIE!", "Please select another card.", JOptionPane.INFORMATION_MESSAGE);
                choicea = 0;
                choiceb = 0;
                handDisplay();   
            }
            else {
                buttonContinue.setVisible(true);
            }
            
            
        }
   
    }    
    
    public void HandAOff() {
        cardRock1A.setEnabled(false);
        cardRock2A.setEnabled(false);
        cardRock3A.setEnabled(false);
        cardPaper1A.setEnabled(false);
        cardPaper2A.setEnabled(false);
        cardPaper3A.setEnabled(false); 
        cardScissors1A.setEnabled(false);
        cardScissors2A.setEnabled(false);
        cardScissors3A.setEnabled(false);

    }

    public void HandBOff() {
        cardRock1B.setEnabled(false);
        cardRock2B.setEnabled(false);
        cardRock3B.setEnabled(false);
        cardPaper1B.setEnabled(false);
        cardPaper2B.setEnabled(false);
        cardPaper3B.setEnabled(false); 
        cardScissors1B.setEnabled(false);
        cardScissors2B.setEnabled(false);
        cardScissors3B.setEnabled(false);
    
    }
    
    public void EndGame(){
        if (pointsa<=0||pointsb<=0){
            TurnAllButtonsOff();
            buttonStart.setEnabled(true);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rockpaperscissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rockpaperscissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rockpaperscissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rockpaperscissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rockpaperscissors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddap;
    private javax.swing.JButton buttonAddar;
    private javax.swing.JButton buttonAddas;
    private javax.swing.JButton buttonAddbp;
    private javax.swing.JButton buttonAddbr;
    private javax.swing.JButton buttonAddbs;
    private javax.swing.JButton buttonContinue;
    private javax.swing.JButton buttonGo;
    private javax.swing.JButton buttonMinusap;
    private javax.swing.JButton buttonMinusar;
    private javax.swing.JButton buttonMinusas;
    private javax.swing.JButton buttonMinusbp;
    private javax.swing.JButton buttonMinusbr;
    private javax.swing.JButton buttonMinusbs;
    private javax.swing.JButton buttonPlay;
    private javax.swing.JButton buttonPoola;
    private javax.swing.JButton buttonPoolb;
    private javax.swing.JButton buttonStart;
    private javax.swing.JButton cardPaper1A;
    private javax.swing.JButton cardPaper1B;
    private javax.swing.JButton cardPaper2A;
    private javax.swing.JButton cardPaper2B;
    private javax.swing.JButton cardPaper3A;
    private javax.swing.JButton cardPaper3B;
    private javax.swing.JButton cardRock1A;
    private javax.swing.JButton cardRock1B;
    private javax.swing.JButton cardRock2A;
    private javax.swing.JButton cardRock2B;
    private javax.swing.JButton cardRock3A;
    private javax.swing.JButton cardRock3B;
    private javax.swing.JButton cardScissors1A;
    private javax.swing.JButton cardScissors1B;
    private javax.swing.JButton cardScissors2A;
    private javax.swing.JButton cardScissors2B;
    private javax.swing.JButton cardScissors3A;
    private javax.swing.JButton cardScissors3B;
    private javax.swing.JLabel labelPointsa;
    private javax.swing.JLabel labelPointsb;
    private javax.swing.JLabel labelUsera;
    private javax.swing.JLabel labelUserb;
    private javax.swing.JTextField textOutcome;
    private javax.swing.JTextField textOutcomeb;
    private javax.swing.JTextField textPaper;
    private javax.swing.JTextField textPaperb;
    private javax.swing.JTextField textRock;
    private javax.swing.JTextField textRockb;
    private javax.swing.JTextField textScissors;
    private javax.swing.JTextField textScissorsb;
    // End of variables declaration//GEN-END:variables

    private void delay(int i) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
